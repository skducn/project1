{"uid":"d05373a4b094e5ed","name":"test_login","fullName":"test_i_main.TestLogin#test_login","historyId":"60b89b87b77febfacdd1cb250a3edc27","time":{"start":1744693396066,"stop":1744693396066,"duration":0},"status":"broken","statusMessage":"SystemExit: 0","statusTrace":"self = <test_i_main.TestLogin object at 0x10bd0ed40>\n\n    @pytest.mark.run(order=1)\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.story('获取token')\n    def test_login(self):\n>       d_user_token = Gw_PO_i.curlLogin(Gw_PO_i.encrypt(json.dumps(d_['登录'])))  # {'user': '11012', 'token': 'eyJhbG...\n\ntest_i_main.py:102: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nGwPO_i.py:70: in encrypt\n    self._sm2(Web_PO)\nGwPO_i.py:59: in _sm2\n    Web_PO.openURL(\"https://config.net.cn/tools/sm2.html\")\nPO/WebPO.py:416: in openURL\n    self._openURL(varURL)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <PO.WebPO.WebPO object at 0x10bd0dcc0>\nvarURL = 'https://config.net.cn/tools/sm2.html'\n\n    def _openURL(self, varURL):\n    \n        # 1.1 打开chrome\n    \n        # 1 配置项\n        options = Options()\n    \n        if self.driver == \"chromeCookies\":\n    \n            # todo 屏幕\n            options.add_argument(\"--start-maximized\")  # 最大化浏览器\n            # width, height = pyautogui.size()  # 1440 900  # 自动获取屏幕尺寸，即最大化\n            # options.add_argument('--window-size=%s,%s' % (pyautogui.size()[0], pyautogui.size()[1])) # 自动获取屏幕尺寸，即最大化浏览器 1440 900\n            # options.add_argument(\"--start-fullscreen\")  # 全屏模式，F11可退出\n            # options.add_argument(\"--kiosk\")  # 全屏模式，alt+tab切换。ctrl+f4退出\n            # options.add_argument('--window-size=%s,%s' % (320, 800)) # 指定窗口大小320 800\n    \n            # todo 浏览器\n            options.add_experimental_option(\"detach\", True)  # 浏览器永不关闭\n            options.add_argument('--incognito')  # 无痕模式\n            options.add_argument('--disable-popup-blocking')  # 禁用弹窗阻止（可能有助于避免某些弹窗相关的崩溃）\n            options.add_experimental_option(\"excludeSwitches\", [\"ignore-certificate-errors\"])  # 屏蔽--ignore-certificate-errors提示信息的设置参数项\n            options.add_experimental_option(\"excludeSwitches\", [\"enable-automation\"])  # 屏蔽 \"Chrome正受到自动测试软件的控制\"提示，建议放在最后。\n            # options.add_argument('blink-settings=imagesEnabled=false')  # 不加载图片（提升速度）\n            options.add_argument('--hide-scrollbars')  # 隐藏滚动条（因对一些特殊页面）\n            # options.headless = True  # 无界面模式\n            # options.add_argument(\"--lang=en\")  # 指定浏览器的语言，避免出现“询问是否翻译非您所用语言的网页”\n    \n            # todo 安全性\n            options.add_argument(\"--allow-running-insecure-content\")  # 允许HTTPS页面从HTTP链接引用JavaScript、CSS和插件内容，该参数会降低浏览器的安全性，因为它允许HTTPS页面加载未加密的HTTP资源。这可能导致中间人攻击（MITM），从而危及用户的数据安全和隐私。\n            options.add_argument(\"--disable-blink-features=AutomationControlled\")  # 禁止浏览器出现验证滑块，防止自动化检测，关闭浏览器控制显示\n            options.add_argument(\"--unsafely-treat-insecure-origin-as-secure=http://192.168.0.203:30080/\")  # 解决下载文件是提示：已阻止不安全的文件下载，允许不安全的文件下载\n            # 禁用“保存密码”弹出窗口\n            options.add_experimental_option(\"prefs\", {\"credentials_enable_service\": False, \"profile.password_manager_enabled\": False})\n    \n            # todo 系统\n            # options.add_argument(\"disable-cache\")  # 禁用缓存\n            options.add_argument(\"--disable-extensions\")  # 禁用所有插件和扩展（提高稳定性，有时插件可能引起稳定性问题）\n            options.add_argument('--no-sandbox')  # 关闭沙盒模式（沙盒模式提一种提高安全性的技术，但可能与某系统不兼容，关闭可能会降低浏览器的安全性）\n            options.add_argument('-disable-dev-shm-usage')  # 禁用/dev/shm使用（可减少内存使用，但影响性能）\n            options.add_argument('--disable-gpu')  # 禁用GPU加速（虽然GPU加速可以提高性能，但有些情况下会导致崩溃）\n            # options.add_experimental_option('excludeSwitches', ['enable-logging'])  # 禁止打印日志\n            options.add_argument('--disable-logging')  # 禁用日志记录（减少日志记录的资源消耗）\n            # options.add_argument('--disable-javascript')  # 禁用JavaScript（有时可以用来测试JavaScript相关的问题）\n            # options.add_argument(r\"--user-data-dir=c:\\selenium_user_data\")  # 设置用户文件夹，可存储登录信息，解决每次要求登录问题\n    \n            # 更新下载chromedriver\n            self.updateChromedriver(options)\n    \n            self.driver.get(varURL)\n            return self.driver\n    \n        elif self.driver == \"chrome\":\n    \n            # todo 屏幕\n            options.add_argument(\"--start-maximized\")  # 最大化浏览器\n            # width, height = pyautogui.size()  # 1440 900  # 自动获取屏幕尺寸，即最大化\n            # options.add_argument('--window-size=%s,%s' % (pyautogui.size()[0], pyautogui.size()[1])) # 自动获取屏幕尺寸，即最大化浏览器 1440 900\n            # options.add_argument(\"--start-fullscreen\")  # 全屏模式，F11可退出\n            # options.add_argument(\"--kiosk\")  # 全屏模式，alt+tab切换。ctrl+f4退出\n            # options.add_argument('--window-size=%s,%s' % (320, 800)) # 指定窗口大小320 800\n    \n            # todo 浏览器\n            options.add_experimental_option(\"detach\", True)  # 浏览器永不关闭\n            options.add_argument('--incognito')  # 无痕模式\n            options.add_argument('--disable-popup-blocking')  # 禁用弹窗阻止（可能有助于避免某些弹窗相关的崩溃）\n            options.add_experimental_option(\"excludeSwitches\", [\"ignore-certificate-errors\"])  # 屏蔽--ignore-certificate-errors提示信息的设置参数项\n            options.add_experimental_option(\"excludeSwitches\", [\"enable-automation\"])  # 屏蔽 \"Chrome正受到自动测试软件的控制\"提示，建议放在最后。\n            # options.add_argument('blink-settings=imagesEnabled=false')  # 不加载图片（提升速度）\n            options.add_argument('--hide-scrollbars')  # 隐藏滚动条（因对一些特殊页面）\n            # options.headless = True  # 无界面模式\n            # options.add_argument(\"--lang=en\")  # 指定浏览器的语言，避免出现“询问是否翻译非您所用语言的网页”\n    \n            # todo 安全性\n            options.add_argument(\"--allow-running-insecure-content\")  # 允许HTTPS页面从HTTP链接引用JavaScript、CSS和插件内容，该参数会降低浏览器的安全性，因为它允许HTTPS页面加载未加密的HTTP资源。这可能导致中间人攻击（MITM），从而危及用户的数据安全和隐私。\n            options.add_argument(\"--disable-blink-features=AutomationControlled\")  # 禁止浏览器出现验证滑块，防止自动化检测，关闭浏览器控制显示\n            options.add_argument(\"--unsafely-treat-insecure-origin-as-secure=http://192.168.0.203:30080/\")  # 解决下载文件是提示：已阻止不安全的文件下载，允许不安全的文件下载\n            # 禁用“保存密码”弹出窗口\n            options.add_experimental_option(\"prefs\", {\"credentials_enable_service\": False, \"profile.password_manager_enabled\": False})\n    \n            # todo 系统\n            # options.add_argument(\"disable-cache\")  # 禁用缓存\n            options.add_argument(\"--disable-extensions\")  # 禁用所有插件和扩展（提高稳定性，有时插件可能引起稳定性问题）\n            options.add_argument('--no-sandbox')  # 关闭沙盒模式（沙盒模式提一种提高安全性的技术，但可能与某系统不兼容，关闭可能会降低浏览器的安全性）\n            options.add_argument('-disable-dev-shm-usage')  # 禁用/dev/shm使用（可减少内存使用，但影响性能）\n            options.add_argument('--disable-gpu')  # 禁用GPU加速（虽然GPU加速可以提高性能，但有些情况下会导致崩溃）\n            # options.add_experimental_option('excludeSwitches', ['enable-logging'])  # 禁止打印日志\n            options.add_argument('--disable-logging')  # 禁用日志记录（减少日志记录的资源消耗）\n            # options.add_argument('--disable-javascript')  # 禁用JavaScript（有时可以用来测试JavaScript相关的问题）\n            # options.add_argument(r\"--user-data-dir=c:\\selenium_user_data\")  # 设置用户文件夹，可存储登录信息，解决每次要求登录问题\n    \n            # 更新下载chromedriver\n            self.updateChromedriver(options)\n    \n            # # 绕过检测（滑动验证码）\n            # self.driver.execute_cdp_cmd(\"Page.addScriptToEvaluteOnNewDocument\", {\"source\": \"\"\"Object.defineProperty(navigator,'webdriver', {get: () => undefined})\"\"\"})\n    \n            self.driver.get(varURL)\n            return self.driver\n    \n        elif self.driver == \"noChrome\":\n    \n            # 1 配置项\n    \n            print(\"212121212\")\n>           sys.exit(0)\nE           SystemExit: 0\n\nPO/WebPO.py:351: SystemExit","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"SystemExit: 0","statusTrace":"self = <test_i_main.TestLogin object at 0x10bd0ed40>\n\n    @pytest.mark.run(order=1)\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.story('获取token')\n    def test_login(self):\n>       d_user_token = Gw_PO_i.curlLogin(Gw_PO_i.encrypt(json.dumps(d_['登录'])))  # {'user': '11012', 'token': 'eyJhbG...\n\ntest_i_main.py:102: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nGwPO_i.py:70: in encrypt\n    self._sm2(Web_PO)\nGwPO_i.py:59: in _sm2\n    Web_PO.openURL(\"https://config.net.cn/tools/sm2.html\")\nPO/WebPO.py:416: in openURL\n    self._openURL(varURL)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <PO.WebPO.WebPO object at 0x10bd0dcc0>\nvarURL = 'https://config.net.cn/tools/sm2.html'\n\n    def _openURL(self, varURL):\n    \n        # 1.1 打开chrome\n    \n        # 1 配置项\n        options = Options()\n    \n        if self.driver == \"chromeCookies\":\n    \n            # todo 屏幕\n            options.add_argument(\"--start-maximized\")  # 最大化浏览器\n            # width, height = pyautogui.size()  # 1440 900  # 自动获取屏幕尺寸，即最大化\n            # options.add_argument('--window-size=%s,%s' % (pyautogui.size()[0], pyautogui.size()[1])) # 自动获取屏幕尺寸，即最大化浏览器 1440 900\n            # options.add_argument(\"--start-fullscreen\")  # 全屏模式，F11可退出\n            # options.add_argument(\"--kiosk\")  # 全屏模式，alt+tab切换。ctrl+f4退出\n            # options.add_argument('--window-size=%s,%s' % (320, 800)) # 指定窗口大小320 800\n    \n            # todo 浏览器\n            options.add_experimental_option(\"detach\", True)  # 浏览器永不关闭\n            options.add_argument('--incognito')  # 无痕模式\n            options.add_argument('--disable-popup-blocking')  # 禁用弹窗阻止（可能有助于避免某些弹窗相关的崩溃）\n            options.add_experimental_option(\"excludeSwitches\", [\"ignore-certificate-errors\"])  # 屏蔽--ignore-certificate-errors提示信息的设置参数项\n            options.add_experimental_option(\"excludeSwitches\", [\"enable-automation\"])  # 屏蔽 \"Chrome正受到自动测试软件的控制\"提示，建议放在最后。\n            # options.add_argument('blink-settings=imagesEnabled=false')  # 不加载图片（提升速度）\n            options.add_argument('--hide-scrollbars')  # 隐藏滚动条（因对一些特殊页面）\n            # options.headless = True  # 无界面模式\n            # options.add_argument(\"--lang=en\")  # 指定浏览器的语言，避免出现“询问是否翻译非您所用语言的网页”\n    \n            # todo 安全性\n            options.add_argument(\"--allow-running-insecure-content\")  # 允许HTTPS页面从HTTP链接引用JavaScript、CSS和插件内容，该参数会降低浏览器的安全性，因为它允许HTTPS页面加载未加密的HTTP资源。这可能导致中间人攻击（MITM），从而危及用户的数据安全和隐私。\n            options.add_argument(\"--disable-blink-features=AutomationControlled\")  # 禁止浏览器出现验证滑块，防止自动化检测，关闭浏览器控制显示\n            options.add_argument(\"--unsafely-treat-insecure-origin-as-secure=http://192.168.0.203:30080/\")  # 解决下载文件是提示：已阻止不安全的文件下载，允许不安全的文件下载\n            # 禁用“保存密码”弹出窗口\n            options.add_experimental_option(\"prefs\", {\"credentials_enable_service\": False, \"profile.password_manager_enabled\": False})\n    \n            # todo 系统\n            # options.add_argument(\"disable-cache\")  # 禁用缓存\n            options.add_argument(\"--disable-extensions\")  # 禁用所有插件和扩展（提高稳定性，有时插件可能引起稳定性问题）\n            options.add_argument('--no-sandbox')  # 关闭沙盒模式（沙盒模式提一种提高安全性的技术，但可能与某系统不兼容，关闭可能会降低浏览器的安全性）\n            options.add_argument('-disable-dev-shm-usage')  # 禁用/dev/shm使用（可减少内存使用，但影响性能）\n            options.add_argument('--disable-gpu')  # 禁用GPU加速（虽然GPU加速可以提高性能，但有些情况下会导致崩溃）\n            # options.add_experimental_option('excludeSwitches', ['enable-logging'])  # 禁止打印日志\n            options.add_argument('--disable-logging')  # 禁用日志记录（减少日志记录的资源消耗）\n            # options.add_argument('--disable-javascript')  # 禁用JavaScript（有时可以用来测试JavaScript相关的问题）\n            # options.add_argument(r\"--user-data-dir=c:\\selenium_user_data\")  # 设置用户文件夹，可存储登录信息，解决每次要求登录问题\n    \n            # 更新下载chromedriver\n            self.updateChromedriver(options)\n    \n            self.driver.get(varURL)\n            return self.driver\n    \n        elif self.driver == \"chrome\":\n    \n            # todo 屏幕\n            options.add_argument(\"--start-maximized\")  # 最大化浏览器\n            # width, height = pyautogui.size()  # 1440 900  # 自动获取屏幕尺寸，即最大化\n            # options.add_argument('--window-size=%s,%s' % (pyautogui.size()[0], pyautogui.size()[1])) # 自动获取屏幕尺寸，即最大化浏览器 1440 900\n            # options.add_argument(\"--start-fullscreen\")  # 全屏模式，F11可退出\n            # options.add_argument(\"--kiosk\")  # 全屏模式，alt+tab切换。ctrl+f4退出\n            # options.add_argument('--window-size=%s,%s' % (320, 800)) # 指定窗口大小320 800\n    \n            # todo 浏览器\n            options.add_experimental_option(\"detach\", True)  # 浏览器永不关闭\n            options.add_argument('--incognito')  # 无痕模式\n            options.add_argument('--disable-popup-blocking')  # 禁用弹窗阻止（可能有助于避免某些弹窗相关的崩溃）\n            options.add_experimental_option(\"excludeSwitches\", [\"ignore-certificate-errors\"])  # 屏蔽--ignore-certificate-errors提示信息的设置参数项\n            options.add_experimental_option(\"excludeSwitches\", [\"enable-automation\"])  # 屏蔽 \"Chrome正受到自动测试软件的控制\"提示，建议放在最后。\n            # options.add_argument('blink-settings=imagesEnabled=false')  # 不加载图片（提升速度）\n            options.add_argument('--hide-scrollbars')  # 隐藏滚动条（因对一些特殊页面）\n            # options.headless = True  # 无界面模式\n            # options.add_argument(\"--lang=en\")  # 指定浏览器的语言，避免出现“询问是否翻译非您所用语言的网页”\n    \n            # todo 安全性\n            options.add_argument(\"--allow-running-insecure-content\")  # 允许HTTPS页面从HTTP链接引用JavaScript、CSS和插件内容，该参数会降低浏览器的安全性，因为它允许HTTPS页面加载未加密的HTTP资源。这可能导致中间人攻击（MITM），从而危及用户的数据安全和隐私。\n            options.add_argument(\"--disable-blink-features=AutomationControlled\")  # 禁止浏览器出现验证滑块，防止自动化检测，关闭浏览器控制显示\n            options.add_argument(\"--unsafely-treat-insecure-origin-as-secure=http://192.168.0.203:30080/\")  # 解决下载文件是提示：已阻止不安全的文件下载，允许不安全的文件下载\n            # 禁用“保存密码”弹出窗口\n            options.add_experimental_option(\"prefs\", {\"credentials_enable_service\": False, \"profile.password_manager_enabled\": False})\n    \n            # todo 系统\n            # options.add_argument(\"disable-cache\")  # 禁用缓存\n            options.add_argument(\"--disable-extensions\")  # 禁用所有插件和扩展（提高稳定性，有时插件可能引起稳定性问题）\n            options.add_argument('--no-sandbox')  # 关闭沙盒模式（沙盒模式提一种提高安全性的技术，但可能与某系统不兼容，关闭可能会降低浏览器的安全性）\n            options.add_argument('-disable-dev-shm-usage')  # 禁用/dev/shm使用（可减少内存使用，但影响性能）\n            options.add_argument('--disable-gpu')  # 禁用GPU加速（虽然GPU加速可以提高性能，但有些情况下会导致崩溃）\n            # options.add_experimental_option('excludeSwitches', ['enable-logging'])  # 禁止打印日志\n            options.add_argument('--disable-logging')  # 禁用日志记录（减少日志记录的资源消耗）\n            # options.add_argument('--disable-javascript')  # 禁用JavaScript（有时可以用来测试JavaScript相关的问题）\n            # options.add_argument(r\"--user-data-dir=c:\\selenium_user_data\")  # 设置用户文件夹，可存储登录信息，解决每次要求登录问题\n    \n            # 更新下载chromedriver\n            self.updateChromedriver(options)\n    \n            # # 绕过检测（滑动验证码）\n            # self.driver.execute_cdp_cmd(\"Page.addScriptToEvaluteOnNewDocument\", {\"source\": \"\"\"Object.defineProperty(navigator,'webdriver', {get: () => undefined})\"\"\"})\n    \n            self.driver.get(varURL)\n            return self.driver\n    \n        elif self.driver == \"noChrome\":\n    \n            # 1 配置项\n    \n            print(\"212121212\")\n>           sys.exit(0)\nE           SystemExit: 0\n\nPO/WebPO.py:351: SystemExit","steps":[],"attachments":[{"uid":"f651fb984f6f7c47","name":"stdout","source":"f651fb984f6f7c47.txt","type":"text/plain","size":10}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":1,"attachmentStep":false,"stepsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"feature","value":"登录模块"},{"name":"severity","value":"critical"},{"name":"story","value":"获取token"},{"name":"tag","value":"run(order=1)"},{"name":"suite","value":"test_i_main"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"localhost-2.local"},{"name":"thread","value":"11783-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_i_main"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["run(order=1)"]},"source":"d05373a4b094e5ed.json","parameterValues":[]}