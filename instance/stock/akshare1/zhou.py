# -*- coding: utf-8 -*-
# *****************************************************************
# Author     : John
# Date       : 2025-06-07
# Description: 周线买卖策略
# *****************************************************************

import akshare as ak
from datetime import datetime, timedelta
import mplfinance as mpf
import os
import sys


def get_stock_weekly_volume(*weekly):

    # 获取指定股票的周线成交量数据

    # d_ = {}
    # # # 获取股票代码列表
    # l_stock_code = ["603906"]
    # # l_stock_code = ["603906", '603758', '300607']
    # #
    # for i in l_stock_code:
    #     l_all = []
    #     for j in weekly:
    #         # 获取股票周线数据
    #         l_ = ak.stock_zh_a_hist(symbol=i, period="weekly", start_date=j, end_date=j, adjust="qfq")
    #         l_all.append(l_)
    #     d_[i] = l_all
    #     # 代码，名称，周日期，开盘，收盘，最高，最低，成交量，成交金额，振幅，涨幅，涨跌，换手率
    #     # ['600671', '天目药业', '2025-05-30', '12.41', '12.88', '12.96', '12.14', '177028', '221437875.00', '6.64', '4.29', '0.53', '14.54']
    #     # ['600671', '天目药业', '2025-06-06', '12.62', '13.65', '14.16', '12.62', '162195', '220118401.00', '11.96', '5.98', '0.77', '13.33']
    #
    # print(d_)
    # # # {"600671": [['600671', '天目药业', '2025-05-30', '12.41', '12.88', '12.96', '12.14', '177028', '221437875.00', '6.64', '4.29', '0.53', '14.54'],
    # # #             ['600671', '天目药业', '2025-06-06', '12.62', '13.65', '14.16', '12.62', '162195', '220118401.00', '11.96', '5.98', '0.77', '13.33']]}

    # 测试
    # d_ = {'600671': [['600671', '天目药业', '2025-05-30', '12.41', '12.88', '12.96', '12.14', '177028', '221437875.00', '6.64', '4.29', '0.53', '14.54'], ['600671', '天目药业', '2025-06-06', '12.62', '13.65', '14.16', '12.62', '162195', '220118401.00', '11.96', '5.98', '0.77', '13.33']], '603758': [['603758', '秦安股份', '2025-05-30', '12.86', '12.40', '12.91', '12.11', '403563', '506923358.00', '6.20', '-3.88', '-0.50', '9.20'], ['603758', '秦安股份', '2025-06-06', '12.26', '13.10', '13.58', '12.26', '422045', '551860005.00', '10.65', '5.65', '0.70', '9.62']], '300607': [['300607', '拓斯达', '2025-05-30', '34.21', '32.32', '35.95', '32.00', '1820996', '6223022978.00', '11.58', '-5.22', '-1.78', '53.93'], ['300607', '拓斯达', '2025-06-06', '31.84', '34.33', '35.00', '31.58', '1233173', '4066972615.99', '10.58', '6.22', '2.01', '36.52']]}
    # d_ =  {'603906': [['603906', '龙蟠科技', '2025-04-11', '9.97', '9.47', '9.97', '8.16', '669789', '612585475.00', '17.14', '-10.32', '-1.09', '11.85'], ['603906', '龙蟠科技', '2025-04-18', '9.62', '9.49', '10.08', '9.36', '401198', '388500827.00', '7.60', '0.21', '0.02', '7.10'], ['603906', '龙蟠科技', '2025-04-25', '9.49', '9.60', '9.83', '9.42', '270139', '261170746.00', '4.32', '1.16', '0.11', '4.78']]}
    # d_ = {'603906': [['603906', '龙蟠科技', '2025-04-11', '9.97', '9.47', '9.97', '8.16', '669789', '612585475.00', '17.14', '-10.32', '-1.09', '11.85'], ['603906', '龙蟠科技', '2025-04-18', '9.62', '9.49', '10.08', '9.36', '401198', '388500827.00', '7.60', '0.21', '0.02', '7.10'], ['603906', '龙蟠科技', '2025-04-25', '9.49', '9.60', '9.83', '9.42', '270139', '261170746.00', '4.32', '1.16', '0.11', '4.78'], ['603906', '龙蟠科技', '2025-04-30', '9.60', '9.74', '9.87', '9.33', '192992', '185310859.00', '5.63', '1.46', '0.14', '3.42']]}
    d_ = {'603906': [['603906', '龙蟠科技', '2025-04-11', '9.97', '9.47', '9.97', '8.16', '669789', '612585475.00', '17.14', '-10.32', '-1.09', '11.85'],
                     ['603906', '龙蟠科技', '2025-04-18', '9.62', '9.49', '10.08', '9.36', '401198', '388500827.00', '7.60', '0.21', '0.02', '7.10'],
                     ['603906', '龙蟠科技', '2025-04-25', '9.49', '9.60', '9.83', '9.42', '270139', '261170746.00', '4.32', '1.16', '0.11', '4.78'],
                     ['603906', '龙蟠科技', '2025-04-30', '9.60', '9.74', '9.87', '9.33', '192992', '185310859.00', '5.63', '1.46', '0.14', '3.42'],
                     ['603906', '龙蟠科技', '2025-05-09', '9.75', '10.18', '10.37', '9.75', '323039', '327030999.00', '6.37', '4.52', '0.44', '5.72']]}

    for k, v in d_.items():
        l_1 = []
        for info in v:
            l_1.append(info[2])
            # 开盘价，收盘价比较，获取最高价
            if float(info[3]) >= float(info[4]):
                l_1.append(info[3])
            else:
                l_1.append(info[4])
            l_1.append(info[7])  # 成交量
            l_1.append(info[10])  # 振幅  大于0为红，小于0为绿
        print(l_1)  # ['2025-05-30', '12.88', '177028', '6.64', '2025-06-06', '13.65', '162195','11.96']

        if len(l_1) == 8:
            # todo 买方1: 两周lh背离（涨跌判断l或h）
            # 这里的最高价(开盘价和收盘价比较那个大就是最高价)
            # 上周成交量 > 本周成交量，上周最高价*0.99 < 本周最高价(开盘价和收盘价那个大就是最高价)，输出。
            # float(l_1[3]) < 0 and float(l_1[7]) > 0  上周绿，本周红
            # float(l_1[2]) > float(l_1[6]) 上周成交量大于本周成交
            # (float(l_1[1]) * 0.99) < float(l_1[5]) 上周最高价*0.99 < 本周最高价(开盘价和收盘价那个大就是最高价)
            if float(l_1[3]) < 0 and float(l_1[7]) > 0 and \
                    float(l_1[2]) > float(l_1[6]) and \
                    (float(l_1[1])*0.99) < float(l_1[5]):
                if int(k) >= 600000  and int(k) < 700000:
                    print("https://xueqiu.com/S/SH" + str(k), info[1])
                else:
                    print("https://xueqiu.com/S/SZ" + str(k), info[1])

            # todo 买方2: 两周lh / hh正比（上升通道5线处买，底部反弹时等2周横盘缩量买）
            # 上周成交量 < 本周成交量，上周最高价 * 0.99 < 本周最高价，输出。
            if float(l_1[2]) < float(l_1[6]) and \
                    (float(l_1[1])*0.99) < float(l_1[5]):
                if int(k) >= 600000  and int(k) < 700000:
                    print("https://xueqiu.com/S/SH" + str(k), info[1])
                else:
                    print("https://xueqiu.com/S/SZ" + str(k), info[1])

        elif len(l_1) == 12:
            # 三周
            # todo 买方3: 三周lhh背离（涨跌判断l或h）
            # 上周成交量 > 本周成交量，上周最高价* 0.99 < 本周最高价，
            # 上上周成交量 > 本周最高价, 上上周最高价 * 0.99 < 本周最高价，输出。
            # ['2025-04-11', '9.97', '669789', '-10.32', '2025-04-18', '9.62', '401198', '0.21',
            # '2025-04-25', '9.60', '270139', '1.16']
            # float(l_1[3]) < 0 and float(l_1[7]) > 0 and float(l_1[11]) > 0 and \  lhh
            if float(l_1[3]) < 0 and float(l_1[7]) > 0 and float(l_1[11]) > 0 and \
                    float(l_1[6]) > float(l_1[10]) and \
                    (float(l_1[5]) * 0.99) < float(l_1[9]) and \
                    float(l_1[2]) > float(l_1[10]) and \
                    (float(l_1[1]) * 0.99) < float(l_1[9]) :
                if int(k) >= 600000 and int(k) < 700000:
                    print("https://xueqiu.com/S/SH" + str(k), info[1])
                else:
                    print("https://xueqiu.com/S/SZ" + str(k), info[1])

        elif len(l_1) == 16:
            # 4周
            # todo 买方4: 4周lhhh背离（涨跌判断l或h）
            # 上周成交量 > 本周成交量，上周最高价* 0.99 < 本周最高价，
            # 上上周成交量 > 本周最高价, 上上周最高价 * 0.99 < 本周最高价
            # 上上周成交量 > 本周最高价, 上上周最高价 * 0.99 < 本周最高价，输出。
            # ['2025-04-11', '9.97', '669789', '-10.32', '2025-04-18', '9.62', '401198', '0.21',
            # '2025-04-25', '9.60', '270139', '1.16', '2025-04-30', '9.74', '192992', '1.46']
            if float(l_1[3]) < 0 and float(l_1[7]) > 0 and float(l_1[11]) > 0 and float(l_1[15]) > 0 and \
                    float(l_1[2]) > float(l_1[14]) and \
                    (float(l_1[1]) * 0.99) < float(l_1[13]) :
                if int(k) >= 600000 and int(k) < 700000:
                    print("https://xueqiu.com/S/SH" + str(k), info[1])
                else:
                    print("https://xueqiu.com/S/SZ" + str(k), info[1])

        elif len(l_1) == 20:
            # 5周
            # todo 买方5: 5周lhhhh背离（涨跌判断l或h）
            # ['2025-04-11', '9.97', '669789', '-10.32', '2025-04-18', '9.62', '401198', '0.21',
            # '2025-04-25', '9.60', '270139', '1.16', '2025-04-30', '9.74', '192992', '1.46',
            # '2025-05-09', '9.75', '323039', '4.52']
            # print(999)
            # print(float(l_1[2]) , float(l_1[18]))
            # print((float(l_1[1]) * 0.99) , float(l_1[17]))
            if float(l_1[3]) < 0 and float(l_1[7]) > 0 and float(l_1[11]) > 0 and float(l_1[15]) > 0 and float(l_1[19]) > 0 and \
                    float(l_1[2]) > float(l_1[18]) and \
                    (float(l_1[1]) * 0.99) < float(l_1[17]):
                if int(k) >= 600000 and int(k) < 700000:
                    print("https://xueqiu.com/S/SH" + str(k), info[1])
                else:
                    print("https://xueqiu.com/S/SZ" + str(k), info[1])


if __name__ == "__main__":

    # 获取两周周数据
    # get_stock_weekly_volume("20250530", "20250606")

    # # 获取3周周数据
    # get_stock_weekly_volume("20250523", "20250530", "20250606")

    get_stock_weekly_volume("20250411", "20250418", "20250425")


    # get_stock_weekly_volume("20250411", "20250418", "20250425", "20250430")
    # get_stock_weekly_volume("20250411", "20250418", "20250425", "20250430", "20250509")