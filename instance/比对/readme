http://www.51testing.com/html/96/n-7806896.html
告别人工核对！Python自动化搞定3大文本比对场景


场景一：CSV / Excel 结构化数据字段级比对
解决思路先把两张表按主键对齐，再逐列标记差异，最后导出差异报告。
　　· 对齐：使用商品 ID 作为唯一键，避免错位。
　　· 标记：为每列生成布尔型“变更”标志，True 即差异。
　　· 导出：将含 True 的行写入新 Excel，直接送交业务方。


场景二：系统日志行级变更追踪
场景刻画：版本迭代常伴随日志格式调整、错误码收敛或新增监控告警。面对数十兆的日志文件，传统文本编辑器难以提供结构化差异视图。
解决思路把新旧日志按行读入，生成带颜色标记的 HTML 差异报告。
　　·读入：逐行读取，保留行号与原始顺序。
　　· 比对：difflib.HtmlDiff 自动计算增删改。
　　· 可视化：直接输出 HTML，浏览器即可查看。


场景三：API 响应 JSON 深度结构比对
　　4.1 场景刻画
　　接口回归测试中，JSON 响应往往嵌套多层，且包含时间戳、请求 ID 等动态字段。若采用全量断言，将导致用例频繁失败；若人工抽样，又可能遗漏关键业务差异。
　　4.2 技术方案
　　步骤 1：解决思路深度遍历 JSON，忽略动态字段，只保留业务关键差异。
　　·遍历：递归比较嵌套结构。
　　· 忽略：用路径表达式排除 timestamp、request_id。
　　· 聚焦：自定义关键字段列表，差异一目了然。