# coding: utf-8
# *****************************************************************
# Author     : John
# Date       : 2022-3-21
# Description: 副本（深复制 np.copy()）, 视图（浅复制 deepcopy()）
# 定义：副本是一个数据的完整的拷贝，对副本进行修改是不会影响到原始数据，他们的物理内存不在同一位置。
# 定义：视图是数据的一个别称或引用，通过该别称或引用亦便可访问、操作原有数据，但原有数据不会产生拷贝。如果我们对视图进行修改，它会影响到原始数据，物理内存在同一位置。

# np.view() 创建一个新的数组对象，该方法创建的新数组的维数变化不会改变原始数据的维数。类似于 copy()
# *****************************************************************

import numpy as np

print("1 创建一个副本，修改b内容，不影响a内容".center(100, "-"))
a = np.array([[10, 10], [2, 3], [4, 5]])
print(a)
b = a.copy()
print(b)

b[0, 0] = 500
print(b)
print(a)


print("2 切片操作返回原数据的视图".center(100, "-"))
arr = np.arange(12)
print(arr)  # [ 0  1  2  3  4  5  6  7  8  9 10 11]
print(id(arr))  # 1600827110464
a = arr[3:]
print(id(a))  # 1442378801360
b = arr[3:]
print(id(b))  # 1442376266816
print(a)  # [ 3  4  5  6  7  8  9 10 11]
a[1] = 123
b[2] = 555
print(arr)  # [  0   1   2   3 123 555   6   7   8   9  10  11]
# 分析：切片a、b是 arr 的一部分视图，对视图的修改会直接反映到原数据中，其中arr,a,b 三者的id不同，区别于赋值引用。



print("3 np.view() 深复制".center(100, "-"))
a = np.arange(6).reshape(3,2)
print(a)
# [[0 1]
#  [2 3]
#  [4 5]]
b = a.view()
# print(a(id))
# print(b(id))
b.shape = 2,3
print(b)
# [[0 1 2]
#  [3 4 5]]
print(a)
# [[0 1]
#  [2 3]
#  [4 5]]




